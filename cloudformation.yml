AWSTemplateFormatVersion: 2010-09-09
Parameters:
  TeastoreInstanceType:
    Type: String
    Default: c4.xlarge
    Description: Default is c4.xlarge
  LocustInstanceType:
    Type: String
    Default: t3.medium
    Description: Default is t3.medium
  ClustersARN:
    Type: String
    Description: Cluster ARN
  ClustersSubnetIds:
    Description: Subnet IDs
    Type: "List<AWS::EC2::Subnet::Id>"

Resources:
  EKSTeastore:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: teastore-cluster
      RoleArn: !Ref ClustersARN
      ResourcesVpcConfig:
        SubnetIds:
          !Ref ClustersSubnetIds
  EKSTeastoreNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      AmiType: AL2_x86_64
      CapacityType: ON_DEMAND
      ClusterName: teastore-cluster
      InstanceTypes:
        - !Ref TeastoreInstanceType
      NodegroupName: teastoreclusternodegroup
      NodeRole: !Ref ClustersARN
      Subnets:
        !Ref ClustersSubnetIds
    DependsOn: EKSTeastore
  EKSLoadTest:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: teastore-loadtester
      RoleArn: !Ref ClustersARN
      ResourcesVpcConfig:
        SubnetIds:
          !Ref ClustersSubnetIds
  EKSLoadTestNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      AmiType: AL2_x86_64
      CapacityType: ON_DEMAND
      ClusterName: teastore-loadtester
      InstanceTypes:
        - !Ref LocustInstanceType
      NodegroupName: teastoreloadtesternodegroup
      NodeRole: !Ref ClustersARN
      Subnets:
        !Ref ClustersSubnetIds
    DependsOn: EKSLoadTest
  TeastoreWebUIPort:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: "0.0.0.0/0"
      Description: "Webui"
      FromPort: 30080
      GroupId: !GetAtt EKSTeastore.ClusterSecurityGroupId
      IpProtocol: tcp
      ToPort: 30080
  TeastoreZipkinPort:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: "0.0.0.0/0"
      Description: "Zipkin"
      FromPort: 32200
      GroupId: !GetAtt EKSTeastore.ClusterSecurityGroupId
      IpProtocol: tcp
      ToPort: 32200
  TeastorePrometheusPort:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: "0.0.0.0/0"
      Description: "Prometheus"
      FromPort: 32201
      GroupId: !GetAtt EKSTeastore.ClusterSecurityGroupId
      IpProtocol: tcp
      ToPort: 32201
  TeastoreLokiPort:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: "0.0.0.0/0"
      Description: "Loki"
      FromPort: 32202
      GroupId: !GetAtt EKSTeastore.ClusterSecurityGroupId
      IpProtocol: tcp
      ToPort: 32202
  TeastoreGrafanaPort:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: "0.0.0.0/0"
      Description: "Grafana"
      FromPort: 32203
      GroupId: !GetAtt EKSTeastore.ClusterSecurityGroupId
      IpProtocol: tcp
      ToPort: 32203
  TeastoreJaegerPort:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: "0.0.0.0/0"
      Description: "Jaeger"
      FromPort: 32204
      GroupId: !GetAtt EKSTeastore.ClusterSecurityGroupId
      IpProtocol: tcp
      ToPort: 32204
  TeastoreLocustPort:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: "0.0.0.0/0"
      Description: "Locust"
      FromPort: 32001
      GroupId: !GetAtt EKSLoadTest.ClusterSecurityGroupId
      IpProtocol: tcp
      ToPort: 32001
